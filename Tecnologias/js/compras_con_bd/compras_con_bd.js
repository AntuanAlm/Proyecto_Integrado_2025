
//   Este script gestiona la l√≥gica para a√±adir productos al carrito de compras en la p√°gina de precios.
//   - Antes de a√±adir un producto, consulta al servidor para verificar si el usuario ya ha comprado el producto seleccionado.
//   - Impide que se a√±adan productos √∫nicos (no recurrentes) m√°s de una vez al carrito.
//   - Permite la compra m√∫ltiple solo de productos definidos como recurrentes.
//   - Valida que el precio recibido sea un n√∫mero v√°lido antes de a√±adirlo al carrito.
//   - Fusiona la l√≥gica del carrito local (localStorage) para actualizar cantidades o a√±adir nuevos productos.
//   - Actualiza la visualizaci√≥n del carrito y muestra alertas informativas al usuario seg√∫n la acci√≥n realizada.


function agregarAlCarrito(nombre, precio, tipo) {
    fetch("http://localhost/Proyecto_Integrado_2025/Tecnologias/php/verificar_usuario_pago/verificar_usuario.php")
        .then(response => response.json())
        .then(data => {
            // üîπ Lista de productos que se pueden comprar m√∫ltiples veces
            let productosRecurrentes = ["Pr√°ctico", "Pack de 10 Clases Pr√°cticas", "Pack de 20 Clases Pr√°cticas", "Curso Intensivo"];

            if (!productosRecurrentes.includes(nombre) && data.productos_comprados.includes(nombre)) {
                alert(`‚ùå Ya has comprado '${nombre}'. No puedes a√±adirlo nuevamente.`);
                return; // üîπ Bloquea la acci√≥n antes de que cause errores
            }
            // no puedes comprar el pack completo si ya has comprado el te√≥rico o pr√°ctico porque lo he limitado a 1 desde el php.

            // üîπ Asegura que el precio es un n√∫mero v√°lido
            precio = parseFloat(precio); 
            if (isNaN(precio)) {
                console.error(`‚ö†Ô∏è Error: Precio inv√°lido para '${nombre}'. Valor recibido:`, precio);
                alert(`‚ùå Error: El precio de '${nombre}' es inv√°lido.`);
                return;
            }

            // üîπ Manejo del carrito fusionando l√≥gica de `carrito.js`
            let carrito = JSON.parse(localStorage.getItem("carrito")) || [];
            let itemExistente = carrito.find(item => item.nombre === nombre);

            if (itemExistente) {
                itemExistente.cantidad += 1;
            } else {
                carrito.push({ nombre, precio: Number(precio), tipo, cantidad: 1 });
            }

            localStorage.setItem("carrito", JSON.stringify(carrito));
            actualizarCarrito(); // Refresca la visualizaci√≥n del carrito

            alert(`‚úÖ '${nombre}' ha sido a√±adido al carrito.`);
        })
        .catch(error => console.error("Error al verificar compras antes de a√±adir al carrito:", error));
}
